plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootRun {
	systemProperty 'spring.profiles.active', 'testdata'
}

ext {
	set('springCloudVersion', "2023.0.3")
	set('testcontainersVersion', "1.17.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//스프링 클라우드 컨피그 의존성
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	//설정 서버 연결 재시도 라이브러리
	implementation 'org.springframework.retry:spring-retry'
	//새로고침 이벤트
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//스프링 데이터 JDBC 의존성
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	//플라이웨어 사용
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//테스트 컨테이너 의존성 추가
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
